package com.micro.accounts.service.impl;

import java.util.Random;

import org.springframework.stereotype.Service;

import com.micro.accounts.constants.AccountsConstants;
import com.micro.accounts.dto.CustomerDto;
import com.micro.accounts.entity.Accounts;
import com.micro.accounts.entity.Customer;
import com.micro.accounts.mapper.CustomerMapper;
import com.micro.accounts.repository.AccountSRepository;
import com.micro.accounts.repository.CustomerRepository;
import com.micro.accounts.service.IAccountsService;

import lombok.AllArgsConstructor;

@Service
@AllArgsConstructor // if constructor no need of AUtowired keyword
public class AccountServiceImpl implements IAccountsService{
	
	private AccountSRepository accountSRepository;
	private CustomerRepository customerRepository;

	@Override
	public void createAccount(CustomerDto customerDto) {
		Customer customer = CustomerMapper.mapToCustomer(customerDto, new Customer());
		Customer saveCustomer = customerRepository.save(customer);
		accountSRepository.save(null)
		
	}
	
	private Accounts createNewAccount(Customer customer) {
		Accounts newAccount = new Accounts();
		newAccount.setCustomerId(customer.getCustomerId());
		
		long randomActNumber = 1000000000L + new Random().nextInt(900000000);
		newAccount.setAccountNumber(randomActNumber);		
		newAccount.setAccountType(AccountsConstants.SAVINGS);
		newAccount.setBranchAddress(AccountsConstants.ADDRESS);

		return newAccount;
	}

}
